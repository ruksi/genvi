[darglint]
docstring_style = sphinx
strictness = long

[flake8]
max-line-length = 88
max-complexity = 10
max-cognitive-complexity = 7
max-expression-complexity = 7
max-function-length = 100
max-parameters-amount = 6
max-returns-amount = 3
docstring-convention = pep257
ban-relative-imports = true
per-file-ignores =
    tests/*.py, **/tests/*.py, *_test.py: S101
extend-ignore =
    D1,      # allow missing comments, but be strict if provided
    E722,    # bare except, duplicate of `PLW0703`
    PLC0301, # line too long, duplicate of `E501`
    B950,    # line too long, duplicate of `E501`
    W503,    # allow newline right before operator (it's actually best practice)
extend-select =
    B,     # checks from `flake8-bugbear`
    B9,    # more opinionated checks from `flake8-bugbear`
    C,
    C4,    # checks from `flake8-comprehensions`
    C9,    # checks from `mccabe` that comes with `flake8`
    CFQ,   # checks from `flake8-functions`
    D,     # checks from `flake8-docstrings`
    DAR,   # checks from `darglint`
    E,     # checks from `pycodestyle` that comes with `flake8`
    E8,    # checks from `flake8-eradicate`
    ECE,   # checks from `flake8-expression-complexity`
    F,     # checks from `pyflakes` that comes with `flake8`
    I25,   # checks from `flake8-tidy-imports`
    N4,    # checks from `flake8-broken-line`
    N8,    # checks from `pep8-naming`
    PL,    # checks from `flake8-pylint`
    PT,    # checks from `flake8-pytest-style`
    R5,    # checks from `flake8-return`
    RST,   # checks from `flake8-rst-docstrings`
    S,     # checks from `flake8-bandit`
    T20,   # checks from `flake8-print`
    TAE,   # checks from `flake8-annotations-complexity`
    W,     # checks from `pycodestyle` that comes with `flake8`
