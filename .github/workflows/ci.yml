---
name: CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  NO_VENV: 1  # enable running `make` commands outside of a virtual environment

jobs:


  lint:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.7'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/requirements*.*'
      - name: Install Python dependencies
        run: make dev-python
      - name: Save cache base key for Python
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - name: Use pre-commit hook cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install pre-commit hooks
        run: make dev-hooks
      - name: Run lint
        run: make lint


  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/requirements*.*'
      - name: Install Python dependencies
        run: make dev-python
      - name: Run tests with coverage
        run: make coverage-data
      - name: Upload coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: .coverage.*
          if-no-files-found: ignore


  coverage:
    needs: test
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.7'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install --upgrade coverage[toml]
      - uses: actions/download-artifact@v3
        with:
          name: coverage-data
      - name: Check for coverage threshold
        run: |
          python -m coverage combine
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report --fail-under=100
      - name: Upload coverage report if check failed
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: htmlcov
        if: ${{ failure() }}


  test-outdated:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.7'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/requirements*.*'
      - name: Install valid but outdated Python dependencies
        run: make dev-python dev-python-outdated
      - name: Run tests
        run: make test


  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.7'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/requirements*.*'
      - name: Install Python dependencies
        run: make dev-python

      - name: Build package (wheel)
        run: make build
      - name: Install package (wheel)
        run: pip install dist/*.whl
      - name: Run console smoke test (wheel)
        run: myproject -h
      - name: Uninstall (wheel)
        run: make uninstall

      - name: Install package (editable)
        run: make install
      - name: Run console smoke test (editable)
        run: myproject -h
      - name: Uninstall (editable)
        run: make uninstall
# -->
  convert:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.7'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/requirements*.*'
      - name: Convert the template to a project
        run: make package="artproject" author="Arthur" email="arthur@example.com"
      - name: Install Python dependencies
        run: make dev-python
      - name: Run tests
        run: make test
      - name: Install package
        run: make install
      - name: Smoke test console interface
        run: artproject -h
# <--
