[build-system]
requires = [
    'setuptools>=62.6', # supports requirements `file:` in `setup.cfg`
    'wheel',
]
build-backend = 'setuptools.build_meta'

[tool.black]
line-length = 88
preview = true  # enable experimental `black` rules, most notably string splitting
skip-string-normalization = true

[tool.isort]
profile = 'black'

[tool.autoflake]
in-place = true
remove-unused-variables = true     # replace with `imports:` and/or `exclude:` if some imports have side effects
ignore-init-module-imports = true  # package `__init__`s are frequently used to simplify imports
expand-star-imports = true
remove-all-unused-imports = true
remove-duplicate-keys = true

[tool.mypy]
# Strict mode (mypy 0.961) enables the following flags:
#  --check-untyped-defs
#  --disallow-any-generics
#  --disallow-incomplete-defs
#  --disallow-subclassing-any
#  --disallow-untyped-calls
#  --disallow-untyped-decorators
#  --disallow-untyped-defs
#  --no-implicit-optional
#  --no-implicit-reexport
#  --strict-concatenate
#  --strict-equality
#  --warn-redundant-casts
#  --warn-return-any
#  --warn-unused-configs
#  --warn-unused-ignores
strict = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = false        # individual expressions can be Any
disallow_any_unimported = true   # make sure types from dependencies get resolved
disallow_subclassing_any = true
ignore_missing_imports = false
show_error_codes = true
warn_unreachable = true

[tool.pylint.master]

[tool.pylint.messages_control]
max-line-length = 88
disable = [  # https://pylint.pycqa.org/en/latest/user_guide/messages/messages_overview.html
    'missing-class-docstring',
    'missing-function-docstring',
    'missing-module-docstring',
    'too-few-public-methods',
    'abstract-class-instantiated',  # duplicate with mypy:abstract
]

[tool.pylint.reports]
output-format = 'colorized'
reports = false  # don't show full report for each file...
score = false    # don't show score if ran for each file...

[tool.pylint.basic]
docstring-min-length = 5
good-names = [
    '_',  # the "throwaway" marker
    'i',  # a common iterator or index
    'j',  # a common nested iterator
    'k',  # a common nested iterator
    'e',  # an exception or error
    'ex', # an exception or error
]
bad-names = [
    'foo',
    'bar',
]

[tool.pylint.format]
max-line-length = 88
max-module-lines = 1000
single-line-class-stmt = false
single-line-if-stmt = false

[tool.pytest.ini_options]
addopts = [
    '--strict-config',
    '--strict-markers',
    '--import-mode=importlib',  # the best practice https://docs.pytest.org/en/latest/explanation/goodpractices.html
]
norecursedirs = ['.*', 'build', 'dist', 'venv']
filterwarnings = ['error']  # turn warnings into errors
log_level = 'NOTSET'        # capture all `logging` messages

[tool.coverage.run]
branch = true
source = ['.']
omit = [
    '*/site-packages/*',
    '*/tests/*',
    '*_test.py',
]

[tool.coverage.report]
exclude_lines = [
    'class .*Protocol.*\)',
    'def __repr__',
    'if __name__ == .__main__.:',
    'import',
    'pragma: no cover',
    'raise NotImplementedError',
    '@(abc\.)?abstractmethod',
]
